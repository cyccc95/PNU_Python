###정규표현식이란
import re		# 정규표현식 모듈 re를 호출
example = '~~~~~~'
result = re.findall(r'\([A-Za-z가-힣]+, \d+\)', example)

###match 메서드	# 문자열 도입에서 패턴 찾기 re.match(패턴, 문자열)
import re
pattern = r'life'	# 패턴을 객체에 저장, 패턴 앞에는 r 붙임
script = 'life'	# 패턴과 같은 스크립트를 다른 객체에 저장
re.match(pattern, script)	# script에서 pattern을 찾음
re.match(pattern,script).group()	# group() 매서드를 사용해 매치된 내용을 반환
  'life'

re.mathch(r'life', 'life').group()
  'life'

매칭 되지 않으면 오류 메시지
match가 문자열의 시작부터 매칭되는지 찾는 함수이므로 텍스트 중간의 패턴은 찾지 못함

###search 매서드	# 문자열 전체에서 패턴 찾기 re.search(패턴, 문자열)
re.search(패턴, 문자열)

###꼭 알아야 할 정규표현식
\d	숫자와 매치, [0-9]와 같습니다.
\D	숫자가 아닌 것과 매치, [^0-9]와 같습니다
\s	whitespace 문자와 매치, [\t\n\r\f\v]와 같습니다. 맨 앞의 빈칸은 공백(space)를 의미
\S	whitespace 문자가 아닌 것과 매치, [^\t\n\r\f\v]와 같습니다.
\w	문자+숫자와 매치, [a-zA-Z0-9_]와 같습니다
\W	문자_숫자가 아닌 문자와 매치, [^a-zA-Z0-9_]와 같습니다
\\	메타 문자가 아닌 일반 문자 역슬래시(\)와 매치, 메타 문자 앞에 \를 붙이면 일반 문자를 의미

###findall 매서드	# 패턴을 모두 찾아 리스트로 반환
re.findall(패턴, 찾으려는 문자열)




